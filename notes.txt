it contains 0 ones -> 1 way   e.g. "0000000000"

it contains 1 ones -> 10 ways e.g. "1000000000"

it contains 2 ones -> 10 ways e.g. "1100000000"  (nCr(8 - 1, 1 - 1) * 10)/1 
                   -> 35 ways e.g. "1001000000"  (nCr(8 - 1, 2 - 1) * 10)/2

it contains 3 ones -> 10 ways e.g. "1110000000"  (nCr(7 - 1, 1 - 1) * 1 * 10)/1
                   -> 60 ways e.g. "1100100000"  (nCr(7 - 1, 2 - 1) * 2 * 10)/2
                   -> 50 ways e.g. "1001001000"  (nCr(7 - 1, 3 - 1) * 1 * 10)/3

it contains 4 ones -> 10 ways e.g. "1111000000"  (nCr(6 - 1, 1 - 1) * 1 * 10)/1
                   -> ?? ways e.g. "1001000011"  (nCr(6 - 1, 2 - 1) * 3 * 10)/2
                   -> ?? ways e.g. "1101010000"  (nCr(6 - 1, 3 - 1) * 3 * 10)/3
                   -> ?? ways e.g. "1010101000"  (nCr(6 - 1, 4 - 1) * 1 * 10)/4

it contains 5 ones -> 10 ways e.g. "1111100000"  (nCr(5 - 1, 1 - 1) * 1 * 10)/2
                   -> ?? ways e.g. "1101000011"  (nCr(5 - 1, 2 - 1) * 4 * 10)/2
                   -> ?? ways e.g. "1110101000"  (nCr(5 - 1, 3 - 1) * 6 * 10)/3
                   -> ?? ways e.g. "1101010100"  (nCr(5 - 1, 4 - 1) * 4 * 10)/4
                   -> ?? ways e.g. "1010101010"  (nCr(5 - 1, 5 - 1) * 1 * 10)/5


Start with

1111

we can fit a max of 6 zeros into it
1,5
2,4
3,3
4,2
5,1
5 possible * 10 locations


1110100000
1110010000
1110001000
1110000100
1110000010

1101100000
1100110000
1100011000
1100001100
1100000110

1011100000
1001110000
1000111000
1000011100
1000001110

duplicates

so 

nsites = 10
4 ones 
((4 + 1) * (4 - 1) * 10)/2

start with 
1111

max 6 zero fit
1,1,4
1,2,3
1,3,2
1,4,1
2,1,3
2,2,2
2,3,1
3,1,2
3,2,1
4,1,1

((10 * 3) * 10)/3

